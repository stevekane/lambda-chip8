{-
Encode the rules of the lambda calculus in type theory.

[[↓]] = β-reduction

There are three introduction rules and one elimination rule:

e 
  = x
  | λx.e
  | (e1 e2)

λA:U.μα.
  + A → μ
  + μ → μ → μ  
  + string → μ → μ



e1 ↓ λx.e   e2 ↓ v1   e[x |-> v1] ↓ v2
-------------------------------------- λ-elimination
e1 e2 ↓ v2

introduce e1 and e2

{e1 e2 v1 v2: E} → 
e1 ↓ (string → μ → μ) →
e2 ↓ v2 → 
e []
-}